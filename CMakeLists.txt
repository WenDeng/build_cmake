CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
project(build_cmake)

IF(NOT CMAKE_BUILD_TYPE)
   SET(CMAKE_BUILD_TYPE Debug) #设置为release版本，无调试信息
ENDIF()

SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
SET(SOURCE_DIRECTORY  ${PROJECT_SOURCE_DIR}/src/ ${PROJECT_SOURCE_DIR}/demo/)  #源码目录
    
include_directories(${PROJECT_SOURCE_DIR}/include) #include目录

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c11 -m64 -O2")  #编译选项
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -m64 -O2") #编译选项

FOREACH(SOURCE_DIR ${SOURCE_DIRECTORY})    
    AUX_SOURCE_DIRECTORY(${SOURCE_DIR} SOURCES) #依次获取SOURCE_DIR下的各个目录并加入SOURCES中
ENDFOREACH()


add_executable(test ${SOURCES}) 


#SET(OUTPUT_SHARED "${PROJECT_NAME}_shared") #设置输出动态库名
#SET(OUTPUT_STATIC "${PROJECT_NAME}_static") #设置输出静态库名

#LINK_DIRECTORIES(LIB_DIRECTORY)
#TARGET_LINK_LIBRARIES(${PROJECT_SHARED} "sum.a")
#TARGET_LINK_LIBRARIES(${PROJECT_STATIC} "sum.a")

#set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/sum_lib")

#ADD_LIBRARY (${OUTPUT_SHARED} SHARED ${SOURCES} )
#ADD_LIBRARY (${OUTPUT_STATIC} STATIC ${SOURCES} )

